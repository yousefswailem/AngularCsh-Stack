import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { CustomerService } from '../customer.service';
import { Customer } from '../customer.model';

@Component({
  selector: 'app-customers-create',
  templateUrl: './customers-create.component.html',
  styleUrls: ['./customers-create.component.css']
})
export class CustomerCreateComponent implements OnInit {
  customerForm!: FormGroup;

  constructor(private customerService: CustomerService, private fb: FormBuilder, private router: Router) {}

  ngOnInit(): void {
    this.customerForm = this.fb.group({
      firstName: ['', [Validators.required, Validators.minLength(2)]],
      lastName: ['', [Validators.required, Validators.minLength(2)]],
      address: ['', Validators.maxLength(100)], // address is not required
      phone: [''], // E.164 format regex for phone validation [Validators.pattern(/^\+?[1-9]\d{1,14}$/)]
      email: ['', [Validators.required, Validators.email]],
    });
  }

  onSubmit() {
    if (this.customerForm.invalid) {
      console.log('Form is invalid. Please fill in all required fields correctly.');
      return;
    }

    // Creating a new Customer object with form values
    const newCustomer: Customer = {
      id: 0, // Assuming the ID is generated by the server for new entries
      firstName: this.customerForm.get('firstName')?.value,
      lastName: this.customerForm.get('lastName')?.value,
      address: this.customerForm.get('address')?.value,
      phone: this.customerForm.get('phone')?.value,
      email: this.customerForm.get('email')?.value,
      // orders: [], // Assuming a new customer will not have orders upon creation
    };

    this.customerService.createCustomer(newCustomer).subscribe({
      next: (response) => { // The response type will be as per your API contract, adjust if needed
        console.log('Customer created successfully');
        this.router.navigate(['/customers']); // Adjust as per your routing
      },
      error: (error) => {
        console.error('Error creating the customer:', error);
      }
    });
  }
}
